
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import tkinter
from pytube import YouTube
from tkinter import *
from tkinter import Tk, filedialog
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class funcoes_texto():
    def remover_texto_qualidade(self):
        self.mostrar_qualidade.config(text='')

class funcoes(funcoes_texto):
    def abrir_salvar(self):
        print("----------> Definindo local de download...")
        self.download_path = filedialog.askdirectory()
        self.entry_2.delete(0, END)  # Limpa o texto existente
        self.entry_2.insert(0, self.download_path)  # Insere o novo caminho
    def get_link(self):
        self.link = self.entry_1.get()
        print("----------> Link selecionado: ", self.link)
    def set_res_max(self):
        self.mostrar_qualidade.config(text='Qualidade definida para máxima')
        window.after(3000, self.remover_texto_qualidade)
        self.res_max = True
        self.res_min = False
        self.only_audio = False
        self.only_video = False
        print("Resolução Máxima escolhida!")
    
    def set_res_min(self):
        self.mostrar_qualidade.config(text='Qualidade definida para mínima')
        window.after(3000, self.remover_texto_qualidade)
        self.res_min = True
        self.res_max = False
        self.only_audio = False
        self.only_video = False
        print("Resolução Mínima escolhida!")
    def set_only_audio(self):
        self.mostrar_qualidade.config(text='Download apenas do audio')
        window.after(3000, self.remover_texto_qualidade)
        self.res_min = False
        self.res_max = False
        self.only_audio = True
        self.only_video = False
        print("Apenas Audio escolhido!")
    def set_only_video(self):
        self.mostrar_qualidade.config(text='Download apenas do vídeo')
        window.after(3000, self.remover_texto_qualidade)
        self.res_min = False
        self.res_max = False
        self.only_audio = False
        self.only_video = True
        print("Apenas Vídeo escolhido!")
    def download(self):
        self.get_link()
        print("----------> Iniciando download...")
        link = self.link
        yt = YouTube(link)

        if self.res_max:
            self.stream = yt.streams.get_highest_resolution()
            self.stream.download(output_path=self.download_path)
            print("----------> Video Baixado!")
            self.mostrar_qualidade.config(text='Video baixado com sucesso!')
            window.after(3000, self.remover_texto_qualidade)
        elif self.res_min:
            self.stream = yt.streams.get_lowest_resolution()
            self.stream.download(output_path=self.download_path)
            print("----------> Video Baixado!")
            self.mostrar_qualidade.config(text='Video baixado com sucesso!')
            window.after(3000, self.remover_texto_qualidade)
        elif self.only_audio:
            self.stream = yt.streams.filter(only_audio=True).first()
            self.stream.download(output_path=self.download_path)
            print("----------> Audio Baixado!")
            self.mostrar_qualidade.config(text='Audio baixado com sucesso!')
            window.after(3000, self.remover_texto_qualidade)
        elif self.only_video:
            self.stream = yt.streams.filter(only_video=True).first()
            self.stream.download(output_path=self.download_path)
            print("----------> Apenas video Baixado!")
            self.mostrar_qualidade.config(text='Video baixado com sucesso!')
            window.after(3000, self.remover_texto_qualidade)


window = Tk()
class app (funcoes):

    def __init__(self):
        self.window = window
        self.tela()
        self.frame()
        window.mainloop()

    def tela(self):
        window.title("Youtube Video Downloader")
        window.iconbitmap("")
        window.geometry("580x580")
        window.configure(bg = "#F6F6F6")
        window.resizable(False, False)

    def frame(self):
        self.res_max_var = BooleanVar()
        self.res_min_var = BooleanVar()
        self.only_audio = BooleanVar()
        self.only_video = BooleanVar()
        self.video_all = BooleanVar()

        canvas = Canvas(
            window,
            bg = "#F6F6F6",
            height = 580,
            width = 580,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            290.0,
            170.0,
            image=image_image_1
        )

        image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            290.0,
            341.0,
            image=image_image_2
        )

        canvas.create_text(
            53.0,
            38.0,
            anchor="nw",
            text="Configurações de Download",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 20 * -1)
        )

        canvas.create_text(
            53.0,
            283.0,
            anchor="nw",
            text="Local de Download",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 20 * -1)
        )

        canvas.create_text(
            76.0,
            141.0,
            anchor="nw",
            text="Definir Qualidade",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        self.mostrar_qualidade = Label(canvas, text="", background='#F6F6F6', fg='green')
        self.mostrar_qualidade.place(relx=0.35, rely=0.65, relwidth=0.30, relheight=0.05)

        canvas.create_text(
            76.0,
            84.0,
            anchor="nw",
            text="Inserir URL:",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        canvas.create_text(
            103.0,
            172.0,
            anchor="nw",
            text="Máxima",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            289.5,
            122.5,
            image=entry_image_1
        )
        self.entry_1 = Entry(
            bd=0,
            bg="#F5F1EE",
            fg="#000716",
            highlightthickness=0
        )
        self.entry_1.place(
            x=87.0,
            y=104.0,
            width=405.0,
            height=35.0
        )

        image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            289.0,
            341.0,
            image=image_image_3
        )

        entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            325.5,
            341.5,
            image=entry_image_2
        )
        self.entry_2 = Entry(
            bd=0,
            bg="#F5F1EE",
            fg="#000716",
            highlightthickness=0
        )
        self.entry_2.place(
            x=159.0,
            y=323.0,
            width=333.0,
            height=35.0
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.set_res_max,
            relief="flat"
        )
        button_1.place(
            x=76.0,
            y=172.0,
            width=24.0,
            height=24.0
        )

        canvas.create_text(
            103.0,
            207.0,
            anchor="nw",
            text="Apenas Audio",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=self.set_only_audio,
            relief="flat"
        )
        button_2.place(
            x=76.0,
            y=207.0,
            width=24.0,
            height=24.0
        )

        canvas.create_text(
            241.0,
            207.0,
            anchor="nw",
            text="Apenas Vídeo",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=self.set_only_video,
            relief="flat"
        )
        button_3.place(
            x=214.0,
            y=207.0,
            width=24.0,
            height=24.0
        )

        canvas.create_text(
            196.0,
            172.0,
            anchor="nw",
            text="Mínima",
            fill="#4F5258",
            font=("MavenPro ExtraBold", 15 * -1)
        )

        button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=self.set_res_min,
            relief="flat"
        )
        button_5.place(
            x=169.0,
            y=172.0,
            width=24.0,
            height=24.0
        )

        button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=self.download,
            relief="flat"
        )
        button_6.place(
            x=223.0,
            y=420.0,
            width=134.0,
            height=50.0
        )

        button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=self.abrir_salvar,
            relief="flat"
        )
        button_7.place(
            x=91.0,
            y=330.0,
            width=57.0,
            height=24.0
        )
        window.mainloop()

app()